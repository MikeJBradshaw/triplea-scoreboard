{"version":3,"sources":["ScoreCard.js","DataPanel.js","App.js","serviceWorker.js","index.js"],"names":["styles","theme","root","width","marginTop","spacing","unit","overflowX","table","marginLeft","marginRight","ScoreCard","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","Table_default","className","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","props","data","map","element","player","component","scope","wins","loses","winPercentage","Component","liveResults","emailResults","onlineResults","DataPanel","_this","call","state","displayLiveResults","displayEmailResults","displayOnlineResults","gameData","buttonTitleOne","buttonTitleTwo","viewing","Button_default","variant","size","id","onClick","buttonClicked","bind","Grid_default","container","item","xs","sm","ScoreCard_ScoreCard","event","newData","currentTarget","newState","setState","App","DataPanel_DataPanel","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qTAQMA,EAAS,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACFC,MAAO,OACPC,UAAgC,EAArBH,EAAMI,QAAQC,KACzBC,UAAW,QAEfC,MAAO,CAEHC,WAAY,OACZC,YAAa,UAIRC,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAEQ,OACIC,EAAAC,EAAAC,cAAA,WACQF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAOG,UAAW5B,EAAOQ,OACrBgB,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,KACID,EAAAC,EAAAC,cAACI,EAAAL,EAAD,KACID,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAWO,MAAM,UAAjB,UACAR,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAWO,MAAM,UAAjB,QACAR,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAWO,MAAM,UAAjB,SACAR,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAWO,MAAM,UAAjB,oBAGRR,EAAAC,EAAAC,cAACO,EAAAR,EAAD,KACKV,KAAKmB,MAAMC,KAAKC,IAAI,SAAAC,GACjB,OACIb,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAUH,IAAKe,EAAQC,QACnBd,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CACIc,UAAU,KACVC,MAAM,UACNR,MAAM,UAAUK,EAAQC,QAC5Bd,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAWO,MAAM,UAAUK,EAAQI,MACnCjB,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAWO,MAAM,UAAUK,EAAQK,OACnClB,EAAAC,EAAAC,cAACK,EAAAN,EAAD,CAAWO,MAAM,UAAUK,EAAQM,cAAnC,eAvBxChC,EAAA,CAA+BiC,aCdzBC,EAAc,CAChB,CAACP,OAAQ,UAAWG,KAAM,EAAGC,MAAO,EAAGC,cAAe,GACtD,CAACL,OAAQ,QAASG,KAAM,EAAGC,MAAO,EAAGC,cAAe,IACpD,CAACL,OAAQ,QAASG,KAAM,EAAGC,MAAO,EAAGC,cAAe,KACpD,CAACL,OAAQ,QAASG,KAAM,EAAGC,MAAO,EAAGC,cAAe,GACpD,CAACL,OAAQ,SAAUG,KAAM,EAAGC,MAAO,EAAGC,cAAe,IACrD,CAACL,OAAQ,SAAUG,KAAM,EAAGC,MAAO,EAAGC,cAAe,IACrD,CAACL,OAAQ,SAAUG,KAAM,EAAGC,MAAO,EAAGC,cAAe,IACrD,CAACL,OAAQ,OAAQG,KAAM,EAAGC,MAAO,EAAGC,cAAe,IAGjDG,EAAe,CACjB,CAACR,OAAQ,UAAWG,KAAM,EAAGC,MAAO,EAAGC,cAAe,GACtD,CAACL,OAAQ,QAASG,KAAM,EAAGC,MAAO,EAAGC,cAAe,GACpD,CAACL,OAAQ,QAASG,KAAM,EAAGC,MAAO,EAAGC,cAAe,GACpD,CAACL,OAAQ,QAASG,KAAM,EAAGC,MAAO,EAAGC,cAAe,GACpD,CAACL,OAAQ,SAAUG,KAAM,EAAGC,MAAO,EAAGC,cAAe,GACrD,CAACL,OAAQ,SAAUG,KAAM,EAAGC,MAAO,EAAGC,cAAe,GACrD,CAACL,OAAQ,SAAUG,KAAM,EAAGC,MAAO,EAAGC,cAAe,GACrD,CAACL,OAAQ,OAAQG,KAAM,EAAGC,MAAO,EAAGC,cAAe,IAGjDI,EAAgB,CAClB,CAACT,OAAQ,UAAWG,KAAM,EAAGC,MAAO,EAAGC,cAAe,KACtD,CAACL,OAAQ,QAASG,KAAM,EAAGC,MAAO,EAAGC,cAAe,GACpD,CAACL,OAAQ,QAASG,KAAM,EAAGC,MAAO,EAAGC,cAAe,GACpD,CAACL,OAAQ,QAASG,KAAM,EAAGC,MAAO,EAAGC,cAAe,GACpD,CAACL,OAAQ,SAAUG,KAAM,EAAGC,MAAO,EAAGC,cAAe,IACrD,CAACL,OAAQ,SAAUG,KAAM,EAAGC,MAAO,EAAGC,cAAe,GACrD,CAACL,OAAQ,SAAUG,KAAM,EAAGC,MAAO,EAAGC,cAAe,GACrD,CAACL,OAAQ,OAAQG,KAAM,EAAGC,MAAO,EAAGC,cAAe,IAG1CK,EAAb,SAAApC,GACI,SAAAoC,EAAYd,GAAO,IAAAe,EAAA,OAAApC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiC,IACfC,EAAApC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmC,GAAAE,KAAAnC,KAAMmB,KAEDiB,MAAQ,CACTC,oBAAoB,EACpBC,qBAAqB,EACrBC,sBAAsB,EACtBC,SAAUV,GAPCI,EADvB,OAAApC,OAAAO,EAAA,EAAAP,CAAAmC,EAAApC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAmC,EAAA,EAAA1B,IAAA,SAAAC,MAAA,WAaQ,IAAIiC,EAAiB,GACjBC,EAAiB,GACjBC,EAAU,GAiBd,OAfI3C,KAAKoC,MAAMC,oBACXI,EAAiB,QACjBC,EAAiB,SACjBC,EAAU,QAEN3C,KAAKoC,MAAME,qBACfG,EAAiB,OACjBC,EAAiB,SACjBC,EAAU,UAGVF,EAAiB,OACjBC,EAAiB,QACjBC,EAAU,UAGVlC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CACImC,QAAQ,YACRC,KAAK,QACLC,GAAIN,EACJO,QAAShD,KAAKiD,cAAcC,KAAKlD,OAAQyC,GAC7ChC,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CACImC,QAAQ,YACRC,KAAK,QACLC,GAAIL,EACJM,QAAShD,KAAKiD,cAAcC,KAAKlD,OAAQ0C,GAC7CjC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,qBAAagC,EAAb,YACAlC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAM0C,WAAS,EAAC9D,QAAS,GACrBmB,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAM2C,MAAI,EAACC,GAAI,EAAGC,GAAI,IACtB9C,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAM2C,MAAI,EAACC,GAAI,GAAIC,GAAI,GACnB9C,EAAAC,EAAAC,cAAC6C,EAAD,CAAWpC,KAAMpB,KAAKoC,MAAMI,YAEhC/B,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,CAAM2C,MAAI,EAACC,GAAI,EAAGC,GAAI,QApD1C,CAAAhD,IAAA,gBAAAC,MAAA,SA0DkBiD,GACV,IAAIC,EAAUD,EAAME,cAAcZ,GAC9Ba,EAAW,GAGXA,EADY,UAAZF,EACW,CACPrB,oBAAoB,EACpBC,qBAAqB,EACrBC,sBAAsB,EACtBC,SAAUT,GAGE,SAAZ2B,EACO,CACPrB,oBAAoB,EACpBC,qBAAqB,EACrBC,sBAAsB,EACtBC,SAAUV,GAIH,CACPO,oBAAoB,EACpBC,qBAAqB,EACrBC,sBAAsB,EACtBC,SAAUR,GAGlBhC,KAAK6D,SAASD,OAtFtB3B,EAAA,CAA+BJ,aCtBhBiC,mLAVX,OACErD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoD,EAAD,cANQlC,aCMEmC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7D,EAAAC,EAAAC,cAAC4D,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ad3edecf.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing.unit * 3,\n        overflowX: 'auto',\n    },\n    table: {\n        // minWidth: 700,\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n    },\n});\n\nexport class ScoreCard extends Component {\n    render() {\n        return (\n            <div>\n                    <Table className={styles.table}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"center\">Player</TableCell>\n                                <TableCell align=\"center\">Wins</TableCell>\n                                <TableCell align=\"center\">Loses</TableCell>\n                                <TableCell align=\"center\">Win Percentage</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.props.data.map(element => {\n                                return (\n                                    <TableRow key={element.player}>\n                                        <TableCell \n                                            component=\"th\"\n                                            scope=\"element\"\n                                            align=\"center\">{element.player}</TableCell>\n                                        <TableCell align=\"center\">{element.wins}</TableCell>\n                                        <TableCell align=\"center\">{element.loses}</TableCell>\n                                        <TableCell align=\"center\">{element.winPercentage}%</TableCell>\n                                    </TableRow>\n                                );\n                            })}\n                        </TableBody>\n                    </Table>\n            </div>\n        );\n    }\n}\n\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nimport { ScoreCard } from './ScoreCard';\n\n\nconst liveResults = [\n    {player: 'Anthony', wins: 0, loses: 0, winPercentage: 0},\n    {player: 'Brian', wins: 3, loses: 1, winPercentage: 75},\n    {player: 'Brien', wins: 3, loses: 0, winPercentage: 100},\n    {player: 'Jerry', wins: 0, loses: 0, winPercentage: 0},\n    {player: 'Mike B', wins: 1, loses: 2, winPercentage: 33},\n    {player: 'Mike C', wins: 2, loses: 1, winPercentage: 66},\n    {player: 'Taylor', wins: 1, loses: 1, winPercentage: 50},\n    {player: 'Will', wins: 0, loses: 3, winPercentage: 0}\n]\n\nconst emailResults = [\n    {player: 'Anthony', wins: 0, loses: 0, winPercentage: 0},\n    {player: 'Brian', wins: 0, loses: 0, winPercentage: 0},\n    {player: 'Brien', wins: 0, loses: 0, winPercentage: 0},\n    {player: 'Jerry', wins: 0, loses: 0, winPercentage: 0},\n    {player: 'Mike B', wins: 0, loses: 0, winPercentage: 0},\n    {player: 'Mike C', wins: 0, loses: 0, winPercentage: 0},\n    {player: 'Taylor', wins: 0, loses: 0, winPercentage: 0},\n    {player: 'Will', wins: 0, loses: 0, winPercentage: 0}\n]\n\nconst onlineResults = [\n    {player: 'Anthony', wins: 1, loses: 0, winPercentage: 100},\n    {player: 'Brian', wins: 0, loses: 0, winPercentage: 0},\n    {player: 'Brien', wins: 0, loses: 0, winPercentage: 0},\n    {player: 'Jerry', wins: 0, loses: 1, winPercentage: 0},\n    {player: 'Mike B', wins: 1, loses: 1, winPercentage: 50},\n    {player: 'Mike C', wins: 0, loses: 0, winPercentage: 0},\n    {player: 'Taylor', wins: 0, loses: 0, winPercentage: 0},\n    {player: 'Will', wins: 0, loses: 1, winPercentage: 0}\n]\n\nexport class DataPanel extends Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            displayLiveResults: true,\n            displayEmailResults: false,\n            displayOnlineResults: false,\n            gameData: liveResults\n        }\n    }\n\n    render() {\n        let buttonTitleOne = '';\n        let buttonTitleTwo = '';\n        let viewing = '';\n\n        if (this.state.displayLiveResults) {\n            buttonTitleOne = 'Email';\n            buttonTitleTwo = 'Online';\n            viewing = 'Live';\n        }\n        else if(this.state.displayEmailResults) {\n            buttonTitleOne = 'Live';\n            buttonTitleTwo = 'Online';\n            viewing = 'Email';\n        }\n        else {\n            buttonTitleOne = 'Live';\n            buttonTitleTwo = 'Email';\n            viewing = 'Online';\n        }\n        return (\n            <div>\n                <Button \n                    variant=\"contained\"\n                    size=\"large\"\n                    id={buttonTitleOne}\n                    onClick={this.buttonClicked.bind(this)}>{buttonTitleOne}</Button>\n                <Button \n                    variant=\"contained\"\n                    size=\"large\"\n                    id={buttonTitleTwo}\n                    onClick={this.buttonClicked.bind(this)}>{buttonTitleTwo}</Button>\n                <br />\n                <h3>Viewing {viewing} Results</h3>\n                <br />\n                <Grid container spacing={8}>\n                    <Grid item xs={0} sm={2} />\n                    <Grid item xs={12} sm={8}>\n                        <ScoreCard data={this.state.gameData}/>\n                    </Grid>\n                    <Grid item xs={0} sm={2} />\n                </Grid>\n            </div>\n        );\n    }\n\n    buttonClicked(event) {\n        let newData = event.currentTarget.id\n        let newState = {}\n\n        if (newData === 'Email') {\n            newState = {\n                displayLiveResults: false,\n                displayEmailResults: true,\n                displayOnlineResults: false,\n                gameData: emailResults\n            }\n        }\n        else if(newData === 'Live') {\n            newState = {\n                displayLiveResults: true,\n                displayEmailResults: false,\n                displayOnlineResults: false,\n                gameData: liveResults\n            }\n        }\n        else {\n            newState = {\n                displayLiveResults: false,\n                displayEmailResults: false,\n                displayOnlineResults: true,\n                gameData: onlineResults\n            }\n        }\n        this.setState(newState);\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport { DataPanel } from './DataPanel';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <h1>TripleA Scoreboard</h1>\n          <br />\n          <DataPanel />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}